{"ast":null,"code":"var _jsxFileName = \"/Users/johnguinn/Desktop/portfolio/react-image-starter-files/src/App.js\";\nimport React from \"react\";\nimport ImageSearch from \"./ImageSearch/ImageSearch\";\nimport ImageList from \"./ImageList/ImageList\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nconst API_KEY = \"1572283-b92e597df9908815dea42dc51\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  control: {\n    padding: theme.spacing(2)\n  }\n}));\nexport default function App() {\n  const classes = useStyles();\n  state = {\n    images: [],\n    error: null\n  };\n\n  handleGetRequest = async e => {\n    e.preventDefault();\n    const searchItem = e.target.elements.searchValue.value; //Gets the value on button click\n\n    const url = `https://pixabay.com/api/?key=${API_KEY}&q=${searchItem}&image_type=photo`;\n    const request = await fetch(url);\n    const response = await request.json();\n    this.setState({\n      images: response.hits\n    });\n\n    if (!searchItem) {\n      this.setState({\n        error: \"please provide a search term\"\n      });\n    } else {\n      this.setState({\n        images: response.hits,\n        error: null\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ImageSearch, {\n    handleGetRequest: this.handleGetRequest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), this.state.error !== null ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, this.state.error) : React.createElement(ImageList, {\n    images: this.state.images,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/johnguinn/Desktop/portfolio/react-image-starter-files/src/App.js"],"names":["React","ImageSearch","ImageList","makeStyles","Grid","API_KEY","useStyles","theme","root","flexGrow","control","padding","spacing","App","classes","state","images","error","handleGetRequest","e","preventDefault","searchItem","target","elements","searchValue","value","url","request","fetch","response","json","setState","hits"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,OAAO,GAAG,mCAAhB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiC;AAIvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADF;AAJ8B,CAAZ,CAAD,CAA5B;AASA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AAEAS,EAAAA,KAAK,GAAG;AACNC,IAAAA,MAAM,EAAE,EADF;AAENC,IAAAA,KAAK,EAAE;AAFD,GAAR;;AAIAC,EAAAA,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,UAAU,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBC,WAAlB,CAA8BC,KAAjD,CAH8B,CAG0B;;AACxD,UAAMC,GAAG,GAAI,gCAA+BrB,OAAQ,MAAKgB,UAAW,mBAApE;AAEA,UAAMM,OAAO,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA3B;AACA,UAAMG,QAAQ,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAvB;AACA,SAAKC,QAAL,CAAc;AAAEf,MAAAA,MAAM,EAAEa,QAAQ,CAACG;AAAnB,KAAd;;AACA,QAAI,CAACX,UAAL,EAAiB;AACf,WAAKU,QAAL,CAAc;AAAEd,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAFD,MAEO;AACL,WAAKc,QAAL,CAAc;AAAEf,QAAAA,MAAM,EAAEa,QAAQ,CAACG,IAAnB;AAAyBf,QAAAA,KAAK,EAAE;AAAhC,OAAd;AACD;AACF,GAdD;;AAgBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,gBAAgB,EAAE,KAAKC,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,KAAKH,KAAL,CAAWE,KAAX,KAAqB,IAArB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,KAAKF,KAAL,CAAWE,KAAjB,CADD,GAGC,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF,CADF;AAYD","sourcesContent":["import React from \"react\";\nimport ImageSearch from \"./ImageSearch/ImageSearch\";\nimport ImageList from \"./ImageList/ImageList\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst API_KEY = \"1572283-b92e597df9908815dea42dc51\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  state = {\n    images: [],\n    error: null,\n  };\n  handleGetRequest = async (e) => {\n    e.preventDefault();\n\n    const searchItem = e.target.elements.searchValue.value; //Gets the value on button click\n    const url = `https://pixabay.com/api/?key=${API_KEY}&q=${searchItem}&image_type=photo`;\n\n    const request = await fetch(url);\n    const response = await request.json();\n    this.setState({ images: response.hits });\n    if (!searchItem) {\n      this.setState({ error: \"please provide a search term\" });\n    } else {\n      this.setState({ images: response.hits, error: null });\n    }\n  };\n\n  return (\n    <div>\n      <Grid container spacing={2}>\n        <ImageSearch handleGetRequest={this.handleGetRequest} />\n        {this.state.error !== null ? (\n          <div>{this.state.error}</div>\n        ) : (\n          <ImageList images={this.state.images} />\n        )}\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}